variables:
  REPO_NAME: codeberg.org/librarian/librarian
  DOCKER_HOST: tcp://docker:2375

stages:
  - test
  - build
  - deploy

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

test:
  stage: test
  needs: []
  extends: .go-cache
  image: golang:latest
  script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go test $(go list ./...)

bin:
  stage: build
  needs: []
  extends: .go-cache
  image: golang:latest
  script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -ldflags "-X codeberg.org/librarian/librarian/pages.VersionInfo=$(date '+%Y-%m-%d')-$(git rev-list --abbrev-commit -1 HEAD)" -o $CI_PROJECT_DIR/librarian-linux-amd64
    - CGO_ENABLED=0 GOARCH=arm64 GOOS=linux go build -ldflags "-X codeberg.org/librarian/librarian/pages.VersionInfo=$(date '+%Y-%m-%d')-$(git rev-list --abbrev-commit -1 HEAD)" -o $CI_PROJECT_DIR/librarian-linux-arm64
  artifacts:
    paths:
        - librarian-linux-amd64
        - librarian-linux-arm64

docker:
  image: docker:20
  stage: build
  services:
    - name: docker:20-dind
      command: ["--experimental"]
  needs: []
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.8.1/buildx-v0.8.1.linux-amd64
    - chmod +x ~/.docker/cli-plugins/docker-buildx
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_ACCESS_TOKEN
    - docker context create mybuilder
    - docker buildx create --use --name mybuilder mybuilder
    - docker buildx build --platform linux/amd64,linux/arm64 --push -t nineteengladespool/librarian:latest .

deploy:
  image: alpine:latest
  stage: deploy
  before_script:
    - apk update && apk --no-cache add curl git
    - wget -O - https://fly.io/install.sh | sh
    - git clone https://codeberg.org/video-prize-ranch/fly-cfg.git
  script:
    - cd fly-cfg
    - /root/.fly/bin/flyctl deploy --no-cache --detach